using UnityEngine;

namespace PCS.Common
{
    public class MonoSingleton<T> : MonoBehaviour where T : Component
    {
        protected static T instance;

        public static T Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = FindAnyObjectByType<T>();
                    if (instance == null)
                    {
                        var go = Resources.Load(typeof(T).Name) as GameObject;
                        if (go == null)
                        {
                            go = new GameObject(typeof(T).Name + "AutoGenerated");
                            instance = go.AddComponent<T>();
                        }else
                        {
                            instance = go.GetComponent<T>();
                        }
                        
                    }
                }
                return instance;
            }
        }

        protected virtual void Awake()
        {
            Initialize();
        }

        protected virtual void Initialize()
        {
            if (!Application.isPlaying) return;

            instance = this as T;
        }

    }
}
